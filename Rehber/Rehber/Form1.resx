<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctClear.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>